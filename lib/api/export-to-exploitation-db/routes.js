import 'dotenv/config.js' // eslint-disable-line import/no-unassigned-import
import express from 'express'
import queue from '../../util/queue.cjs'
import auth from '../../middleware/auth.js'
import {handleAPIResponse} from '../helper.js'
import {getDistricts} from '../district/models.js'

const exportToExploitationDBQueue = queue('export-to-exploitation-db')

const app = new express.Router()

app.route('/districts')
  .post(auth, async (req, res) => {
    try {
      const {districtIDs} = req.body

      if (!districtIDs || districtIDs.length === 0) {
        handleAPIResponse(res, 400, 'districtIDs should not be empty', {})
        return
      }

      const districts = await getDistricts(districtIDs)
      if (districts.length !== districtIDs.length) {
        handleAPIResponse(res, 404, 'Some districts not found', {})
        return
      }

      await Promise.all(districtIDs.map(async districtID => exportToExploitationDBQueue.add({districtID}, {removeOnComplete: true, removeOnFail: true})))

      handleAPIResponse(res, 200, 'Districts successfully exported to exploitation DB', {})
    } catch (error) {
      console.error(error)
      handleAPIResponse(res, 500, 'Internal server error', {})
    }
  })

export default app

